@model FinalTest.Models.Vm.StudentVM

@{
    ViewBag.Title = "Edit Student";
}

<div class="container mt-5">
    <h2 class="text-center">Students</h2>

    <!-- Trigger for Edit Modal -->
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editStudentModal">Edit Student</button>

    <!-- Edit Modal -->
    <div class="modal fade" id="editStudentModal" tabindex="-1" aria-labelledby="editStudentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editStudentModalLabel">Edit Student</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Student Details</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.StudentId)

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.StudentName, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.StudentName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Age, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IsAdmitted, new { @class = "form-label" })
                            <div class="form-check">
                                @Html.CheckBoxFor(model => model.IsAdmitted, new { @class = "form-check-input" })
                                <label class="form-check-label">Yes</label>
                                @Html.ValidationMessageFor(model => model.IsAdmitted, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Picture, new { @class = "form-label" })
                            <input type="file" name="PictureFile" class="form-control" />
                            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                            <img src="@Model.Picture" width="50" class="mt-2" />
                        </div>

                        <div id="Container">
                            @foreach (var a in Model.Addmissions)
                            {
                                @Html.Action("AddSubject", "", new { id = @a.Subject.SubjectId })

                            }
                        </div>
                        <div>
                            @Html.ActionLink("AddMore", "", null, new { id = "btnplus" })

                        </div>
                    </div>

                        <div class="text-end mt-4">
                            <input type="submit" value="Save Changes" class="btn btn-success" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Add More Subjects Dynamically
    document.getElementById('addMoreSubjects').addEventListener('click', function () {
        const container = document.getElementById('subjectContainer');
        const index = container.querySelectorAll('.subject-container').length;

        const newSubject = document.createElement('div');
        newSubject.classList.add('subject-container', 'mt-2');
        container.appendChild(newSubject);
    });
</script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
